
[Exposed = Window] interface CosmosNode : CosmosXobj {
  // Message API
  void sendMessageToXobj(CosmosXobj msg);
  void sendMessageToNode(CosmosNode node);

  // void ShowWebContent(DOMString strParentDivName, DOMString strDivName);
  // Control Bind Api:
  void setControlVal(DOMString CtrlID, long long CtrlHandle, DOMString strVal);

  // Node API
  CosmosNode getChild(long nIndex);
  CosmosNode getChild(long row, long col);
  CosmosNode getChild(DOMString strName);
  CosmosNode getXobj(DOMString strName);
  void Observe(DOMString strKey, DOMString xml,
               optional ApplicationCallback callback);
  void Observe(DOMString strCtrlName, DOMString strKey, DOMString xml,
               optional ApplicationCallback callback);
  void Observe(long row, long col, DOMString strKey, DOMString xml,
               optional ApplicationCallback callback);
  void ObserveEx(DOMString strKey, Element elem,
                 optional ApplicationCallback callback);
  void ObserveEx(DOMString strCtrlName, DOMString strKey, Element elem,
                 optional ApplicationCallback callback);
  void ObserveEx(long row, long col, DOMString strKey, Element elem,
                 optional ApplicationCallback callback);

  void DispatchXobjEvent(Element elem, DOMString eventName);

  [Replaceable] readonly attribute long row;
  [Replaceable] readonly attribute long col;
  [Replaceable] readonly attribute long rows;
  [Replaceable] readonly attribute long cols;
  [Replaceable] readonly attribute long long handle;
  [Replaceable] readonly attribute long long hwnd;
  [Replaceable] readonly attribute DOMString objtype;

  [Replaceable] readonly attribute CosmosNode root;
  [Replaceable] readonly attribute CosmosNode parent;
  [Replaceable] readonly attribute CosmosXobj parentGalaxy;
  [Replaceable] readonly attribute CosmosXobj parentForm;

  // Event handler attributes
  attribute EventHandler onCloudFormClosed;
  attribute EventHandler onMdiChildActivate;
  attribute EventHandler onCloudMessageForXobj;
};
